name: Release Please

on:
  push:
    branches:
      - main

jobs:
  release-please:
    name: Release Please

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get token
        id: get-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Set up Node.js LTS and yarn
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"

      - name: Install release-please
        run: npm install -g release-please

      - name: Release Please
        id: release-please
        run: |
          echo "::group::Release Please - Creating Releases"
          npx release-please github-release \
            --repo-url ${{ github.repository }} \
            --token ${{ steps.get-token.outputs.token }} \
            --api-url ${{ github.api_url }} \
            --graphql-url ${{ github.api_url }} \
            --debug
          echo "::endgroup::"

          echo "::group::Release Please - Creating Pull Requests"
          npx release-please release-pr \
            --repo-url ${{ github.repository }} \
            --token ${{ steps.get-token.outputs.token }} \
            --api-url ${{ github.api_url }} \
            --graphql-url ${{ github.api_url }} \
            --debug
          echo "::endgroup::"

          echo "Pass versions as JSON to output"
          echo "::set-output name=versions::$(cat .release-please-manifest.json | jq -c)"

      - name: Print versions
        run: echo ${{ fromJSON(steps.release-please.outputs.versions) }}
